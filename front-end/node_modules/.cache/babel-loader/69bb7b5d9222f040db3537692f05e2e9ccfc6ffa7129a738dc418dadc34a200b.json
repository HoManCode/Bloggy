{"ast":null,"code":"var _jsxFileName = \"/Users/hoomanshykhipour/Documents/Learning/fullStack/Bloggy/front-end/src/pages/ArticlePage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport articles from \"./article-content\";\nimport NotFoundPage from \"./NotFoundPage\";\nimport axios from 'axios';\nimport CommentsList from \"../components/CommentsList\";\nimport AddCommentForm from \"../components/AddCommentFrom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ArticlePage = () => {\n  _s();\n  const [articleInfo, setArticleInfo] = useState({\n    upvotes: 0,\n    comments: []\n  });\n  const {\n    articleId\n  } = useParams();\n  useEffect(() => {\n    const loadArticleInfo = async () => {\n      const response = await axios.get(`/api/articles/${articleId}`);\n      const newArticleInfo = response.data;\n      setArticleInfo(newArticleInfo);\n    };\n    loadArticleInfo();\n  }, []);\n  const article = articles.find(article => article.name === articleId);\n  const addUpvote = async () => {\n    const response = await axios.put(`/api/articles/${articleId}/upvote`);\n    const updateArticle = response.data;\n    setArticleInfo(updateArticle);\n  };\n  if (!article) {\n    return /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: article.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upvote-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addUpvote,\n        children: \"Upvote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"This article has \", articleInfo.upvotes, \" upvote(s)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), article.content.map(paragraph => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paragraph\n    }, paragraph, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(AddCommentForm, {\n      articleName: articleId,\n      onArticleUpdate: updatedArticle => setArticleInfo(updatedArticle)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: articleInfo.comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ArticlePage, \"8kRg8K2qFEW/L9acOGNUOfJaIH0=\", false, function () {\n  return [useParams];\n});\n_c = ArticlePage;\nexport default ArticlePage;\nvar _c;\n$RefreshReg$(_c, \"ArticlePage\");","map":{"version":3,"names":["useState","useEffect","useParams","articles","NotFoundPage","axios","CommentsList","AddCommentForm","jsxDEV","_jsxDEV","Fragment","_Fragment","ArticlePage","_s","articleInfo","setArticleInfo","upvotes","comments","articleId","loadArticleInfo","response","get","newArticleInfo","data","article","find","name","addUpvote","put","updateArticle","fileName","_jsxFileName","lineNumber","columnNumber","children","title","className","onClick","content","map","paragraph","articleName","onArticleUpdate","updatedArticle","_c","$RefreshReg$"],"sources":["/Users/hoomanshykhipour/Documents/Learning/fullStack/Bloggy/front-end/src/pages/ArticlePage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport articles from \"./article-content\";\nimport NotFoundPage from \"./NotFoundPage\";\nimport axios from 'axios';\nimport CommentsList from \"../components/CommentsList\";\nimport AddCommentForm from \"../components/AddCommentFrom\";\n\nconst ArticlePage = () =>{\n    const [articleInfo, setArticleInfo ] = useState ({ upvotes: 0, comments:[] });\n    const { articleId } = useParams();\n    useEffect(() => {\n        const loadArticleInfo = async () =>{\n            const response = await axios.get(`/api/articles/${articleId}`);\n            const newArticleInfo = response.data;\n            setArticleInfo(newArticleInfo);\n        }\n        loadArticleInfo();\n    },[])\n    \n    const article = articles.find(article => article.name === articleId);\n    \n    const addUpvote = async () => {\n        const response = await axios.put(`/api/articles/${articleId}/upvote`);\n        const updateArticle = response.data;\n        setArticleInfo(updateArticle);\n    }\n\n    if(!article){\n        return <NotFoundPage />\n    }\n    return(\n        <>\n            <h1>{article.title}</h1>\n            <div className=\"upvote-section\">\n                <button onClick={addUpvote}>Upvote</button>\n                <p>This article has {articleInfo.upvotes} upvote(s)</p>\n            </div>\n            \n            {article.content.map(paragraph => (\n                <p key={paragraph}>{paragraph}</p>\n            ))}\n            <AddCommentForm \n                articleName={articleId}\n                onArticleUpdate={updatedArticle => setArticleInfo(updatedArticle)}/>\n            <CommentsList comments={articleInfo.comments} />\n        </>\n    )\n}\n\nexport default ArticlePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}